install.packages("glmnet")
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(glmnet)
library(glmnet)
library(tidyverse)
set.seed(45)
View(hitters)
View(Hitters)
filter(Hitters, Salary != 'N/A')
baseball <- filter(Hitters, Salary != 'N/A')
baseball
summary(Hitters)
baseball <- filter(Hitters, Salary != 'N/A')
baseball
baseball_train <- Hitters %>% sample_frac(.50)
baseball_valid <- Hitters %>% sample_frac(.30)
baseball_test <- Hitters %>% sample_frac(.20)
ggplot(Hitters, aes(Salary)) +
geom_histogram(data = baseball_test, fill = "red", alpha = 0.5) +
geom_histogram(data = baseball_train, fill = "blue", alpha = 0.5) +
geom_histogram(data = baseball_valid, fill = "green", alpha = 0.5)
lm_mse <- function(formula, train_data, valid_data) {
y_name <- as.character(formula)[2]
y_true <- valid_data[[y_name]]
model <- lm(formula = formula, data = train_data)
y_pred <- predict(model, newdata = valid_data)
mean((y_true - y_pred)^2)
}
lm_mse <- function(formula, train_data, valid_data) {
y_name <- as.character(formula)[2]
y_true <- valid_data[[y_name]]
model <- lm(formula = formula, data = train_data)
y_pred <- predict(model, newdata = valid_data)
mean((y_true - y_pred)^2)
}
lm_mse(Salary~Hits + Runs, baseball_train, baseball_valid)
lm_mse(Salary~Hits + Runs, baseball_train, baseball_valid)
lm_mse(`Salary~Hits + Runs`, baseball_train, baseball_valid)
Salary~Hits + Runs
Salary~Hits + Runs
Salary~Hits + Runs
Salary~Hits + Runs
Salary~Hits + Runs
Salary~Hits + Runs
lm_mse(Salary~Hits + Runs, baseball_train, baseball_valid)
split <- c(rep("train",132),rep("valid",79),rep("test",52))
baseball <- baseball %>% mutate(split=sample(split))
baseball_train <- baseball %>% filter(split=="train")
baseball_valid <- baseball %>% filter(split=="valid")
baseball_test  <- baseball %>% filter(split=="test")
ggplot() +
geom_histogram(data = baseball_train, mapping = aes(x = Salary), alpha = 0.3, colour = "Blue") +
geom_histogram(data = baseball_valid, mapping = aes(x = Salary), alpha = 0.3, colour = "Red") +
geom_histogram(data = baseball_test,  mapping = aes(x = Salary), alpha = 0.3, colour = "Green")
ggplot() +
geom_density(data = baseball_train, mapping = aes(x = Salary), alpha = 0.3, colour = "Blue") +
geom_density(data = baseball_valid, mapping = aes(x = Salary), alpha = 0.3, colour = "Red") +
geom_density(data = baseball_test,  mapping = aes(x = Salary), alpha = 0.3, colour = "Green")
ggplot() +
geom_histogram(data = baseball_train, mapping = aes(x = Salary), alpha = 0.3, colour = "Blue") +
geom_histogram(data = baseball_valid, mapping = aes(x = Salary), alpha = 0.3, colour = "Red") +
geom_histogram(data = baseball_test,  mapping = aes(x = Salary), alpha = 0.3, colour = "Green")
lm_mse <- function(formula, train_data, valid_data) {
y_name <- as.character(formula)[2]
y_true <- valid_data[[y_name]]
# this one is my own code
mymodel <- lm(formula, train_data)
mean((y_true-predict(mymodel, newdata=valid_data))^2)
}
lm_mse(Salary~Hits + Runs, baseball_train, baseball_valid)
set.seed(45)
baseball <- filter(Hitters, Salary != 'N/A')
baseball
split <- c(rep("train",132),rep("valid",79),rep("test",52))
baseball <- baseball %>% mutate(split=sample(split))
baseball_train <- baseball %>% filter(split=="train")
baseball_valid <- baseball %>% filter(split=="valid")
baseball_test  <- baseball %>% filter(split=="test")
ggplot() +
geom_histogram(data = baseball_train, mapping = aes(x = Salary), alpha = 0.3, colour = "Blue") +
geom_histogram(data = baseball_valid, mapping = aes(x = Salary), alpha = 0.3, colour = "Red") +
geom_histogram(data = baseball_test,  mapping = aes(x = Salary), alpha = 0.3, colour = "Green")
ggplot() +
geom_density(data = baseball_train, mapping = aes(x = Salary), alpha = 0.3, colour = "Blue") +
geom_density(data = baseball_valid, mapping = aes(x = Salary), alpha = 0.3, colour = "Red") +
geom_density(data = baseball_test,  mapping = aes(x = Salary), alpha = 0.3, colour = "Green")
lm_mse <- function(formula, train_data, valid_data) {
y_name <- as.character(formula)[2]
y_true <- valid_data[[y_name]]
# this one is my own code
mymodel <- lm(formula, train_data)
mean((y_true-predict(mymodel, newdata=valid_data))^2)
}
lm_mse(Salary~Hits + Runs, baseball_train, baseball_valid)
source("generate_formulas.R")
generate_formulas(p = 2, x_vars = c("x1", "x2", "x3", "x4"), y_var = "y")
x.vars <- colnames(Hitters)
x.vars <- x.vars[x.vars!="Salary"]
formulas <- generate_formulas(3, x.vars, "Salary")
length(formulas)
mses_3 <- NULL
for (i in 1:length(formulas)) {
mses_new <- lm_mse(as.formula(formulas[i]), baseball_train, baseball_valid)
mses_3 <- c(mses_3, mses_new)
}
mses_1 <- NULL
formulas <- generate_formulas(1, x.vars, "Salary")
mses_1 <- NULL
formulas <- generate_formulas(1, x.vars, "Salary")
for (i in 1:length(formulas)) {
mses_new <- lm_mse(as.formula(formulas[i]), baseball_train, baseball_valid)
mses_1 <- c(mses_1, mses_new)
}
mses_2 <- NULL
formulas <- generate_formulas(2, x.vars, "Salary")
for (i in 1:length(formulas)) {
mses_new <- lm_mse(as.formula(formulas[i]), baseball_train, baseball_valid)
mses_2 <- c(mses_2, mses_new)
}
for (i in 1:length(formulas)) {
mses_new <- lm_mse(as.formula(formulas[i]), baseball_train, baseball_valid)
mses_2 <- c(mses_2, mses_new)
}
mses_4 <- NULL
formulas <- generate_formulas(4, x.vars, "Salary")
for (i in 1:length(formulas)) {
mses_new <- lm_mse(as.formula(formulas[i]), baseball_train, baseball_valid)
mses_4 <- c(mses_4, mses_new)
}
for (i in 1:length(formulas)) {
mses_new <- lm_mse(as.formula(formulas[i]), baseball_train, baseball_valid)
mses_4 <- c(mses_4, mses_new)
}
min(mses_1)
min(mses_2)
min(mses_3)
min(mses_4)
formulas[which.min(mses_4)]
lm_best <- lm(as.formula(formulas[which.min(mses_4)]), baseball_train)
mse <- function(y_true, y_pred) mean((y_true - y_pred)^2)
mse(baseball_test$Salary, predict(lm_best, newdata = baseball_test))
lm_best_predict <- tibble(y_true = baseball_test$Salary, y_predict = predict(lm_best, newdata = baseball_test))
ggplot() +
geom_point(data = lm_best_predict, mapping = aes(x = y_predict, y = y_true)) +
geom_abline(intercept=0, slope=1) +
theme_minimal()
?glmnet
x_train <- model.matrix(Salary ~ ., data = baseball_train %>% select(-split))
glmnet(x = x_train, y = baseball_train$Salary, family = c("gaussian"), nlambda = 15, alpha = 1)
